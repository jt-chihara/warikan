syntax = "proto3";

package group.v1;

option go_package = "github.com/jt-chihara/warikan/backend/proto/group/v1;groupv1";

import "google/protobuf/timestamp.proto";

service GroupService {
  rpc CreateGroup(CreateGroupRequest) returns (CreateGroupResponse);
  rpc GetGroup(GetGroupRequest) returns (GetGroupResponse);
  rpc UpdateGroup(UpdateGroupRequest) returns (UpdateGroupResponse);
  rpc DeleteGroup(DeleteGroupRequest) returns (DeleteGroupResponse);
  rpc AddMember(AddMemberRequest) returns (AddMemberResponse);
  rpc RemoveMember(RemoveMemberRequest) returns (RemoveMemberResponse);
  rpc AddExpense(AddExpenseRequest) returns (AddExpenseResponse);
  rpc UpdateExpense(UpdateExpenseRequest) returns (UpdateExpenseResponse);
  rpc DeleteExpense(DeleteExpenseRequest) returns (DeleteExpenseResponse);
  rpc GetGroupExpenses(GetGroupExpensesRequest) returns (GetGroupExpensesResponse);
  rpc CalculateSettlements(CalculateSettlementsRequest) returns (CalculateSettlementsResponse);
}

message Group {
  string id = 1;
  string name = 2;
  string description = 3;
  string currency = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  repeated Member members = 7;
}

message Member {
  string id = 1;
  string name = 2;
  string email = 3;
  google.protobuf.Timestamp joined_at = 4;
}

message CreateGroupRequest {
  string name = 1;
  string description = 2;
  string currency = 3;
  repeated string member_names = 4;
}

message CreateGroupResponse {
  Group group = 1;
}

message GetGroupRequest {
  string id = 1;
}

message GetGroupResponse {
  Group group = 1;
}

message UpdateGroupRequest {
  string id = 1;
  string name = 2;
  string description = 3;
  string currency = 4;
}

message UpdateGroupResponse {
  Group group = 1;
}

message DeleteGroupRequest {
  string id = 1;
}

message DeleteGroupResponse {
  bool success = 1;
}

message AddMemberRequest {
  string group_id = 1;
  string member_name = 2;
  string member_email = 3;
}

message AddMemberResponse {
  Member member = 1;
}

message RemoveMemberRequest {
  string group_id = 1;
  string member_id = 2;
}

message RemoveMemberResponse {
  bool success = 1;
}

// Expense messages
message AddExpenseRequest {
  string group_id = 1;
  int64 amount = 2; // Amount in cents (JPY)
  string description = 3;
  string paid_by_id = 4; // Member ID who paid
  repeated string split_member_ids = 5; // Member IDs to split among
}

message AddExpenseResponse {
  ExpenseWithDetails expense = 1;
}

message UpdateExpenseRequest {
  string expense_id = 1;
  int64 amount = 2; // Amount in cents (JPY)
  string description = 3;
  string paid_by_id = 4; // Member ID who paid
  repeated string split_member_ids = 5; // Member IDs to split among
}

message UpdateExpenseResponse {
  ExpenseWithDetails expense = 1;
}

message DeleteExpenseRequest {
  string expense_id = 1;
}

message DeleteExpenseResponse {
  bool success = 1;
}

message GetGroupExpensesRequest {
  string group_id = 1;
}

message GetGroupExpensesResponse {
  repeated ExpenseWithDetails expenses = 1;
}

message ExpenseWithDetails {
  string id = 1;
  string group_id = 2;
  int64 amount = 3; // Amount in cents (JPY)
  string description = 4;
  string paid_by_id = 5;
  string paid_by_name = 6;
  repeated SplitMember split_members = 7;
  google.protobuf.Timestamp created_at = 8;
}

message SplitMember {
  string member_id = 1;
  string member_name = 2;
  int64 amount = 3; // Amount owed by this member in cents (JPY)
}

// Settlement calculation messages
message CalculateSettlementsRequest {
  string group_id = 1;
  repeated Expense expenses = 2;
}

message CalculateSettlementsResponse {
  repeated Settlement settlements = 1;
  repeated MemberBalance balances = 2;
}

message Expense {
  string id = 1;
  string payer_id = 2;
  int64 amount = 3; // Amount in cents (JPY)
  string description = 4;
  repeated string split_between = 5; // Member IDs
  google.protobuf.Timestamp created_at = 6;
}

message Settlement {
  string from_member_id = 1;
  string to_member_id = 2;
  int64 amount = 3; // Amount in cents (JPY)
  string from_name = 4;
  string to_name = 5;
}

message MemberBalance {
  string member_id = 1;
  string member_name = 2;
  int64 balance = 3; // Positive = owed money, Negative = owes money
}