name: CI

on:
  pull_request:

jobs:
  test-backend:
    name: Backend Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.5'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      working-directory: ./backend
      run: go work sync

    - name: Run backend unit tests
      working-directory: ./backend
      run: |
        go test ./... -v -race -coverprofile=coverage.out
        go tool cover -html=coverage.out -o coverage.html

    - name: Run Group Service unit tests
      working-directory: ./backend
      run: |
        go test ./services/group/internal/algorithm/... -v -race -coverprofile=group-coverage.out
        go tool cover -html=group-coverage.out -o group-coverage.html

  test-frontend:
    name: Frontend Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run linting
      working-directory: ./frontend
      run: npm run lint:ci

    - name: Run type checking
      working-directory: ./frontend
      run: npm run typecheck

    - name: Run frontend tests
      working-directory: ./frontend
      run: npm run test:coverage:ci

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
