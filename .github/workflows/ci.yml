name: CI

on:
  pull_request:

jobs:
  test-backend:
    name: Backend Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Rust (stable)
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo builds
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: backend -> backend/target

    - name: Install system dependencies (OpenSSL)
      run: sudo apt-get update && sudo apt-get install -y libssl-dev pkg-config

    - name: Run backend unit tests
      env:
        SQLX_OFFLINE: "true"
      run: cargo test --locked --all-targets --verbose

  test-frontend:
    name: Frontend Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run linting
      working-directory: ./frontend
      run: npm run lint:ci

    - name: Run type checking
      working-directory: ./frontend
      run: npm run typecheck

    - name: Run frontend tests
      working-directory: ./frontend
      run: npm run test:ci

    - name: Run frontend tests with coverage
      working-directory: ./frontend
      run: npm run test:coverage:ci

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

    - name: Upload frontend coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: ./frontend/coverage/lcov.info
        flags: frontend
        fail_ci_if_error: false
